class Solution {
public:
    int trailingZeroes(int n) {
        // 一个数的末尾有多少个零，取决于它包含多少个因子10，而10可以分解为2和5的乘积。因此，末尾零的个数取决于2和5的数量，而2的数量一定比5多，因此末尾零的个数取决于5的数量。因此，我们需要找到n!中因子5的数量，这就是mi的值。
        int mi=0;
        for (int i=5; i<=n; i+=5){
            int x=i;
            // 在for循环中，每次while确实会重复计算之前的值，但是这不会影响最终结果的正确性。因为重复计算只会增加因子5的数量，不会减少因子5的数量。例如，当i=25时，它包含两个因子5，因此mi会加2。当i=50时，它包含四个因子5，因此mi会再次加2。虽然25和50都包含两个因子5，但是在计算mi时，25的因子5已经被计算过了，因此不会重复计算。总之，在for循环中，我们需要对1到n中的每个数字进行分解质因数，统计其中因子2和因子5的数量。而while循环则是用来计算每个数字中因子5的数量的。
            while (x%5==0){
                x= x/5;
                mi++;
            }
        }
        return mi;
    }
};
