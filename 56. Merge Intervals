class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        if (intervals.size() <= 1) {
            return intervals;
        }
        vector<vector<int>> ans;
        vector<pair<int,int>> p;
        for(int i=0;i<intervals.size();i++)
        {
          p.push_back({intervals[i][0],intervals[i][1]});
        } 
        sort(p.begin(),p.end());

        int start = 0, end = 0;
        for (int i = 0; i < intervals.size(); i++) {
            pair<int,int> temp = p[i];
            if (i == 0) {
                start = temp.first;
                end = temp.second;
            } else if(temp.first <= end) {
                if (temp.second > end) {
                    end = temp.second;
                }
            } else {
                vector<int> vc;
                vc.push_back(start);
                vc.push_back(end);
                ans.push_back(vc);
                start = temp.first;
                end = temp.second;
            }
        }
        vector<int> vc;
        vc.push_back(start);
        vc.push_back(end);
        ans.push_back(vc);
        return ans;
    }
};
