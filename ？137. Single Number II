// class Solution {
// public:
//     int singleNumber(vector<int>& nums) {
//         unordered_map<int, int> m;
        
//         for(auto x: nums){
//             m[x]++;
//         }

//         for(auto x: m){
//             if(x.second == 1){
//                 return x.first;
//             }
//         }
        
//         return -1;
//     }
// };

class Solution {
 public:
  int singleNumber(vector<int>& nums) {
    int ans = 0;

    for (int i = 0; i < 32; ++i) {
      int sum = 0;
      for (const int num : nums)
        sum += num >> i & 1;
      sum %= 3;
      ans |= sum << i;
    }

    return ans;
  }
};

//magic
// class Solution {
//  public:
//   int singleNumber(vector<int>& nums) {
//     int ones = 0;
//     int twos = 0;

//     for (const int num : nums) {
//       ones ^= (num & ~twos);
//       twos ^= (num & ~ones);
//     }

//     return ones;
//   }
// };
